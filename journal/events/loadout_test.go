package events

import (
	"github.com/mrpapercut/seca/models"
	"gopkg.in/check.v1"
)

func (s *EventSuite) TestHandleEventLoadout(c *check.C) {
	rawEvents := []string{
		`{ "timestamp":"2024-12-28T16:56:06Z", "event":"Loadout", "Ship":"anaconda", "ShipID":5, "ShipName":"TRUFFEL-IV", "ShipIdent":"MO-27A", "HullValue":118053224, "ModulesValue":114246143, "HullHealth":1.000000, "UnladenMass":534.299988, "CargoCapacity":64, "MaxJumpRange":71.254654, "FuelCapacity":{ "Main":32.000000, "Reserve":1.070000 }, "Rebuy":11614969, "Modules":[ { "Slot":"Armour", "Item":"anaconda_armour_grade1", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"PaintJob", "Item":"paintjob_anaconda_tactical_white", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"PowerPlant", "Item":"int_powerplant_size4_class5", "On":true, "Priority":1, "Health":1.000000, "Value":1194423 }, { "Slot":"MainEngines", "Item":"int_engine_size5_class2", "On":true, "Priority":0, "Health":1.000000, "Value":156663, "Engineering":{ "Engineer":"Felicity Farseer", "EngineerID":300100, "BlueprintID":128673666, "BlueprintName":"Engine_Tuned", "Level":2, "Quality":1.000000, "Modifiers":[ { "Label":"Integrity", "Value":73.919998, "OriginalValue":77.000000, "LessIsGood":0 }, { "Label":"PowerDraw", "Value":4.773600, "OriginalValue":4.590000, "LessIsGood":1 }, { "Label":"EngineOptimalMass", "Value":604.799988, "OriginalValue":630.000000, "LessIsGood":0 }, { "Label":"EngineOptPerformance", "Value":113.000000, "OriginalValue":100.000000, "LessIsGood":0 }, { "Label":"EngineHeatRate", "Value":0.910000, "OriginalValue":1.300000, "LessIsGood":1 } ] } }, { "Slot":"FrameShiftDrive", "Item":"int_hyperdrive_overcharge_size6_class5", "On":true, "Priority":0, "Health":1.000000, "Value":16090544, "Engineering":{ "Engineer":"Felicity Farseer", "EngineerID":300100, "BlueprintID":128673694, "BlueprintName":"FSD_LongRange", "Level":5, "Quality":1.000000, "ExperimentalEffect":"special_fsd_heavy", "ExperimentalEffect_Localised":"Mass Manager", "Modifiers":[ { "Label":"Mass", "Value":52.000000, "OriginalValue":40.000000, "LessIsGood":1 }, { "Label":"Integrity", "Value":110.262009, "OriginalValue":141.000000, "LessIsGood":0 }, { "Label":"PowerDraw", "Value":0.862500, "OriginalValue":0.750000, "LessIsGood":1 }, { "Label":"FSDOptimalMass", "Value":3224.000000, "OriginalValue":2000.000000, "LessIsGood":0 } ] } }, { "Slot":"LifeSupport", "Item":"int_lifesupport_size5_class2", "On":true, "Priority":0, "Health":1.000000, "Value":65840 }, { "Slot":"PowerDistributor", "Item":"int_powerdistributor_size5_class5", "On":true, "Priority":0, "Health":1.000000, "Value":1028742 }, { "Slot":"Radar", "Item":"int_sensors_size8_class2", "On":true, "Priority":0, "Health":1.000000, "Value":1445308, "Engineering":{ "Engineer":"Felicity Farseer", "EngineerID":300100, "BlueprintID":128740671, "BlueprintName":"Sensor_LightWeight", "Level":3, "Quality":1.000000, "Modifiers":[ { "Label":"Mass", "Value":32.000000, "OriginalValue":64.000000, "LessIsGood":1 }, { "Label":"Integrity", "Value":84.000000, "OriginalValue":120.000000, "LessIsGood":0 }, { "Label":"SensorTargetScanAngle", "Value":25.500000, "OriginalValue":30.000000, "LessIsGood":0 } ] } }, { "Slot":"FuelTank", "Item":"int_fueltank_size5_class3", "On":true, "Priority":1, "Health":1.000000, "Value":81013 }, { "Slot":"Decal1", "Item":"decal_explorer_elite", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"Decal2", "Item":"decal_explorer_elite", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"Decal3", "Item":"decal_explorer_elite", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"Slot01_Size7", "Item":"int_fuelscoop_size7_class5", "On":true, "Priority":0, "Health":1.000000, "Value":75565960 }, { "Slot":"Slot02_Size6", "Item":"int_repairer_size6_class5", "On":false, "Priority":3, "Health":1.000000, "Value":12684435 }, { "Slot":"Slot03_Size6", "Item":"int_cargorack_size6_class1", "On":true, "Priority":1, "Health":1.000000, "Value":300497 }, { "Slot":"Slot04_Size6", "Item":"int_guardianfsdbooster_size5", "On":true, "Priority":0, "Health":1.000000, "Value":5372870 }, { "Slot":"Slot08_Size4", "Item":"int_shieldgenerator_size3_class2", "On":true, "Priority":0, "Health":1.000000, "Value":15592 }, { "Slot":"Slot09_Size4", "Item":"int_buggybay_size2_class2", "On":false, "Priority":0, "Health":1.000000, "Value":17901 }, { "Slot":"Slot10_Size4", "Item":"int_dockingcomputer_advanced", "On":true, "Priority":0, "Health":1.000000, "Value":11194 }, { "Slot":"Slot13_Size2", "Item":"int_detailedsurfacescanner_tiny", "On":true, "Priority":0, "Health":1.000000, "Value":207188 }, { "Slot":"Slot14_Size1", "Item":"int_supercruiseassist", "On":true, "Priority":2, "Health":1.000000, "Value":7559 }, { "Slot":"PlanetaryApproachSuite", "Item":"int_planetapproachsuite_advanced", "On":true, "Priority":1, "Health":1.000000, "Value":414 }, { "Slot":"EngineColour", "Item":"enginecustomisation_red", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"VesselVoice", "Item":"voicepack_verity", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"ShipCockpit", "Item":"anaconda_cockpit", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"CargoHatch", "Item":"modularcargobaydoor", "On":true, "Priority":2, "Health":1.000000 } ] }`,
		`{ "timestamp":"2024-12-28T17:07:03Z", "event":"Loadout", "Ship":"dolphin", "ShipID":7, "ShipName":"TRUFFEL-V", "ShipIdent":"MO-28D", "HullValue":961116, "ModulesValue":212386, "HullHealth":1.000000, "UnladenMass":234.000000, "CargoCapacity":14, "MaxJumpRange":11.394547, "FuelCapacity":{ "Main":16.000000, "Reserve":0.500000 }, "Rebuy":58678, "Modules":[ { "Slot":"SmallHardpoint1", "Item":"hpt_pulselaser_fixed_small", "On":true, "Priority":2, "Health":1.000000, "Value":1930 }, { "Slot":"SmallHardpoint2", "Item":"hpt_pulselaser_fixed_small", "On":true, "Priority":2, "Health":1.000000, "Value":1930 }, { "Slot":"Armour", "Item":"dolphin_armour_grade1", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"PowerPlant", "Item":"int_powerplant_size4_class1", "On":true, "Priority":1, "Health":1.000000, "Value":15613 }, { "Slot":"MainEngines", "Item":"int_engine_size5_class1", "On":true, "Priority":2, "Health":1.000000, "Value":55293 }, { "Slot":"FrameShiftDrive", "Item":"int_hyperdrive_size4_class1", "On":true, "Priority":2, "Health":1.000000, "Value":17442 }, { "Slot":"LifeSupport", "Item":"int_lifesupport_size4_class1", "On":true, "Priority":2, "Health":1.000000, "Value":9958 }, { "Slot":"PowerDistributor", "Item":"int_powerdistributor_size3_class1", "On":true, "Priority":2, "Health":1.000000, "Value":3556 }, { "Slot":"Radar", "Item":"int_sensors_size3_class1", "On":true, "Priority":2, "Health":1.000000, "Value":3556 }, { "Slot":"FuelTank", "Item":"int_fueltank_size4_class3", "On":true, "Priority":1, "Health":1.000000, "Value":21704 }, { "Slot":"Slot01_Size5", "Item":"int_passengercabin_size5_class1", "On":true, "Priority":1, "Health":1.000000, "Value":30672 }, { "Slot":"Slot02_Size4", "Item":"int_cargorack_size3_class1", "On":true, "Priority":1, "Health":1.000000, "Value":9269 }, { "Slot":"Slot03_Size4", "Item":"int_shieldgenerator_size4_class1", "On":true, "Priority":2, "Health":1.000000, "Value":17442 }, { "Slot":"Slot04_Size3", "Item":"int_cargorack_size2_class1", "On":true, "Priority":1, "Health":1.000000, "Value":2851 }, { "Slot":"Slot05_Size2", "Item":"int_cargorack_size1_class1", "On":true, "Priority":1, "Health":1.000000, "Value":877 }, { "Slot":"Slot08_Size1", "Item":"int_supercruiseassist", "On":true, "Priority":2, "Health":1.000000, "Value":8003 }, { "Slot":"Slot09_Size1", "Item":"int_dockingcomputer_advanced", "On":true, "Priority":2, "Health":1.000000, "Value":11852 }, { "Slot":"PlanetaryApproachSuite", "Item":"int_planetapproachsuite_advanced", "On":true, "Priority":1, "Health":1.000000, "Value":438 }, { "Slot":"VesselVoice", "Item":"voicepack_verity", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"ShipCockpit", "Item":"dolphin_cockpit", "On":true, "Priority":1, "Health":1.000000 }, { "Slot":"CargoHatch", "Item":"modularcargobaydoor", "On":true, "Priority":2, "Health":1.000000 } ] }`,
	}

	initialStatus := models.GetStatus()
	c.Assert(initialStatus.ShipName, check.Equals, "")
	c.Assert(initialStatus.ShipType, check.Equals, "")
	c.Assert(initialStatus.FuelCapacity, check.Equals, float64(0.0))

	err := s.eventHandler.handleEventLoadout(rawEvents[0])
	c.Assert(err, check.IsNil)

	updatedAnacondaStatus := models.GetStatus()
	c.Assert(updatedAnacondaStatus.ShipName, check.Equals, "TRUFFEL-IV")
	c.Assert(updatedAnacondaStatus.ShipType, check.Equals, "anaconda")
	c.Assert(updatedAnacondaStatus.FuelCapacity, check.Equals, float64(32))

	err = s.eventHandler.handleEventLoadout(rawEvents[1])
	c.Assert(err, check.IsNil)

	updatedDolphinStatus := models.GetStatus()
	c.Assert(updatedDolphinStatus.ShipName, check.Equals, "TRUFFEL-V")
	c.Assert(updatedDolphinStatus.ShipType, check.Equals, "dolphin")
	c.Assert(updatedDolphinStatus.FuelCapacity, check.Equals, float64(16))
}
