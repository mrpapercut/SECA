input {
  beats {
    port => "${LOGSTASH_PORT_SYSTEMS_WITH_COORDINATES}"
    type => "systems_with_coords"
  }

  beats {
    port => "${LOGSTASH_PORT_SYSTEMS_WITHOUT_COORDINATES}"
    type => "systems_without_coords"
  }

  beats {
    port => "${LOGSTASH_PORT_CELESTIAL_BODIES}"
    type => "celestial_bodies"
  }

  beats {
    port => "${LOGSTASH_PORT_POPULATED_SYSTEMS}"
    type => "populated_systems"
  }
}

filter {
  mutate {
    remove_field => ["host", "agent", "tags", "log", "type"]
  }

  if [type] == "systems_with_coords" {
    date {
      match => ["date", "yyyy-MM-dd HH:mm:ss"]
      timezone => "UTC"
      target => "date"
    }

    mutate {
      convert => ["coords.x", "float"]
      convert => ["coords.y", "float"]
      convert => ["coords.z", "float"]
    }
  }

  if [type] == "systems_without_coords" {
    date {
      match => ["date", "yyyy-MM-dd HH:mm:ss"]
      timezone => "UTC"
      target => "date"
    }
  }
}

output {
  # stdout {}
  if [type] == "systems_with_coords" {
    elasticsearch {
      hosts => [ "${ELASTIC_SCHEME}://${ELASTIC_HOST}:${ELASTIC_PORT}" ]
      index => "${INDEX_SYSTEMS_WITH_COORDINATES}"
      manage_template => false
    }
  }

  if [type] == "systems_without_coords" {
    elasticsearch {
      hosts => [ "${ELASTIC_SCHEME}://${ELASTIC_HOST}:${ELASTIC_PORT}" ]
      index => "${INDEX_SYSTEMS_WITHOUT_COORDINATES}"
      manage_template => false
    }
  }

  if [type] == "celestial_bodies" {
    elasticsearch {
      hosts => [ "${ELASTIC_SCHEME}://${ELASTIC_HOST}:${ELASTIC_PORT}" ]
      index => "${INDEX_CELESTIAL_BODIES}"
      manage_template => false
    }
  }

  if [type] == "populated_systems" {
    elasticsearch {
      hosts => [ "${ELASTIC_SCHEME}://${ELASTIC_HOST}:${ELASTIC_PORT}" ]
      index => "${INDEX_POPULATED_SYSTEMS}"
      manage_template => false
    }
  }
}
